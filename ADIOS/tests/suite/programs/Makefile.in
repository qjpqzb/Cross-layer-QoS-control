# Makefile.in generated by automake 1.15.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
check_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_3) $(am__EXEEXT_3) $(am__EXEEXT_3)
TESTS = $(am__EXEEXT_3) $(am__EXEEXT_3)
subdir = tests/suite/programs
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/ac_alacrity.m4 \
	$(top_srcdir)/config/ac_aplod.m4 \
	$(top_srcdir)/config/ac_bgq.m4 \
	$(top_srcdir)/config/ac_bzip2.m4 \
	$(top_srcdir)/config/ac_cray_pmi.m4 \
	$(top_srcdir)/config/ac_cray_ugni.m4 \
	$(top_srcdir)/config/ac_dataspaces.m4 \
	$(top_srcdir)/config/ac_datatap.m4 \
	$(top_srcdir)/config/ac_dcmf.m4 \
	$(top_srcdir)/config/ac_dimes.m4 \
	$(top_srcdir)/config/ac_dmalloc.m4 \
	$(top_srcdir)/config/ac_fastbit.m4 \
	$(top_srcdir)/config/ac_fgr.m4 \
	$(top_srcdir)/config/ac_flexpath.m4 \
	$(top_srcdir)/config/ac_glib.m4 \
	$(top_srcdir)/config/ac_hdf5.m4 \
	$(top_srcdir)/config/ac_infiniband.m4 \
	$(top_srcdir)/config/ac_isobar.m4 \
	$(top_srcdir)/config/ac_lustre.m4 \
	$(top_srcdir)/config/ac_mxml.m4 \
	$(top_srcdir)/config/ac_nc4par.m4 \
	$(top_srcdir)/config/ac_ncsu_timer.m4 \
	$(top_srcdir)/config/ac_netcdf.m4 \
	$(top_srcdir)/config/ac_nssi.m4 \
	$(top_srcdir)/config/ac_pablo.m4 \
	$(top_srcdir)/config/ac_pami.m4 \
	$(top_srcdir)/config/ac_phdf5.m4 \
	$(top_srcdir)/config/ac_portals.m4 \
	$(top_srcdir)/config/ac_ridcompress.m4 \
	$(top_srcdir)/config/ac_sirius.m4 \
	$(top_srcdir)/config/ac_szip.m4 $(top_srcdir)/config/ac_zfp.m4 \
	$(top_srcdir)/config/ac_zlib.m4 \
	$(top_srcdir)/config/acx_mpi.m4 \
	$(top_srcdir)/config/acx_pthread.m4 \
	$(top_srcdir)/config/cercs.m4 $(top_srcdir)/config/libtool.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
@BUILD_WRITE_TRUE@am__EXEEXT_1 = local_array_time$(EXEEXT) \
@BUILD_WRITE_TRUE@	adios_amr_write$(EXEEXT) \
@BUILD_WRITE_TRUE@	adios_amr_write_2vars$(EXEEXT) \
@BUILD_WRITE_TRUE@	adios_staged_read$(EXEEXT) \
@BUILD_WRITE_TRUE@	adios_staged_read_v2$(EXEEXT) \
@BUILD_WRITE_TRUE@	adios_staged_read_2vars$(EXEEXT) \
@BUILD_WRITE_TRUE@	write_read$(EXEEXT) write_alternate$(EXEEXT) \
@BUILD_WRITE_TRUE@	two_groups$(EXEEXT) many_vars$(EXEEXT) \
@BUILD_WRITE_TRUE@	selections$(EXEEXT) path_test$(EXEEXT) \
@BUILD_WRITE_TRUE@	reuse_dim$(EXEEXT) \
@BUILD_WRITE_TRUE@	adios_transforms_read_write$(EXEEXT) \
@BUILD_WRITE_TRUE@	connect_to_space_subset$(EXEEXT) \
@BUILD_WRITE_TRUE@	big_file$(EXEEXT) set_path$(EXEEXT) \
@BUILD_WRITE_TRUE@	set_path_var$(EXEEXT) steps_write$(EXEEXT) \
@BUILD_WRITE_TRUE@	steps_read_file$(EXEEXT) \
@BUILD_WRITE_TRUE@	steps_read_stream$(EXEEXT) blocks$(EXEEXT) \
@BUILD_WRITE_TRUE@	build_standard_dataset$(EXEEXT) \
@BUILD_WRITE_TRUE@	transforms_writeblock_read$(EXEEXT)
@BUILD_FORTRAN_TRUE@@BUILD_WRITE_TRUE@am__EXEEXT_2 =  \
@BUILD_FORTRAN_TRUE@@BUILD_WRITE_TRUE@	posix_method$(EXEEXT)
am__EXEEXT_3 =
am_adios_amr_write_OBJECTS = adios_amr_write.$(OBJEXT)
adios_amr_write_OBJECTS = $(am_adios_amr_write_OBJECTS)
am__DEPENDENCIES_1 =
adios_amr_write_DEPENDENCIES = $(top_builddir)/src/libadios.a \
	$(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
adios_amr_write_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(adios_amr_write_LDFLAGS) $(LDFLAGS) \
	-o $@
am_adios_amr_write_2vars_OBJECTS = adios_amr_write_2vars.$(OBJEXT)
adios_amr_write_2vars_OBJECTS = $(am_adios_amr_write_2vars_OBJECTS)
adios_amr_write_2vars_DEPENDENCIES = $(top_builddir)/src/libadios.a \
	$(am__DEPENDENCIES_1)
adios_amr_write_2vars_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(adios_amr_write_2vars_LDFLAGS) \
	$(LDFLAGS) -o $@
am_adios_staged_read_OBJECTS = adios_staged_read.$(OBJEXT)
adios_staged_read_OBJECTS = $(am_adios_staged_read_OBJECTS)
adios_staged_read_DEPENDENCIES = $(top_builddir)/src/libadiosread.a \
	$(am__DEPENDENCIES_1)
adios_staged_read_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(adios_staged_read_LDFLAGS) $(LDFLAGS) \
	-o $@
am_adios_staged_read_2vars_OBJECTS =  \
	adios_staged_read_2vars.$(OBJEXT)
adios_staged_read_2vars_OBJECTS =  \
	$(am_adios_staged_read_2vars_OBJECTS)
adios_staged_read_2vars_DEPENDENCIES =  \
	$(top_builddir)/src/libadiosread.a $(am__DEPENDENCIES_1)
adios_staged_read_2vars_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(adios_staged_read_2vars_LDFLAGS) \
	$(LDFLAGS) -o $@
am_adios_staged_read_v2_OBJECTS = adios_staged_read_v2.$(OBJEXT)
adios_staged_read_v2_OBJECTS = $(am_adios_staged_read_v2_OBJECTS)
adios_staged_read_v2_DEPENDENCIES =  \
	$(top_builddir)/src/libadiosread.a $(am__DEPENDENCIES_1)
adios_staged_read_v2_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(adios_staged_read_v2_LDFLAGS) \
	$(LDFLAGS) -o $@
am_adios_transforms_read_write_OBJECTS =  \
	adios_transforms_read_write.$(OBJEXT)
adios_transforms_read_write_OBJECTS =  \
	$(am_adios_transforms_read_write_OBJECTS)
adios_transforms_read_write_DEPENDENCIES =  \
	$(top_builddir)/src/libadios.a $(am__DEPENDENCIES_1)
adios_transforms_read_write_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(adios_transforms_read_write_LDFLAGS) \
	$(LDFLAGS) -o $@
am_big_file_OBJECTS = big_file.$(OBJEXT)
big_file_OBJECTS = $(am_big_file_OBJECTS)
big_file_DEPENDENCIES = $(top_builddir)/src/libadios.a \
	$(am__DEPENDENCIES_1)
big_file_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(big_file_LDFLAGS) $(LDFLAGS) -o $@
am_blocks_OBJECTS = blocks.$(OBJEXT)
blocks_OBJECTS = $(am_blocks_OBJECTS)
blocks_DEPENDENCIES = $(top_builddir)/src/libadios.a \
	$(am__DEPENDENCIES_1)
blocks_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(blocks_LDFLAGS) $(LDFLAGS) -o $@
am_build_standard_dataset_OBJECTS = build_standard_dataset.$(OBJEXT)
build_standard_dataset_OBJECTS = $(am_build_standard_dataset_OBJECTS)
build_standard_dataset_DEPENDENCIES = $(top_builddir)/src/libadios.a \
	$(am__DEPENDENCIES_1)
build_standard_dataset_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(build_standard_dataset_LDFLAGS) \
	$(LDFLAGS) -o $@
am_connect_to_space_subset_OBJECTS =  \
	connect_to_space_subset.$(OBJEXT)
connect_to_space_subset_OBJECTS =  \
	$(am_connect_to_space_subset_OBJECTS)
connect_to_space_subset_DEPENDENCIES = $(top_builddir)/src/libadios.a \
	$(am__DEPENDENCIES_1)
connect_to_space_subset_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(connect_to_space_subset_LDFLAGS) \
	$(LDFLAGS) -o $@
am_local_array_time_OBJECTS = local_array_time.$(OBJEXT)
local_array_time_OBJECTS = $(am_local_array_time_OBJECTS)
local_array_time_DEPENDENCIES = $(top_builddir)/src/libadios.a \
	$(am__DEPENDENCIES_1)
local_array_time_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(local_array_time_LDFLAGS) $(LDFLAGS) \
	-o $@
am_many_vars_OBJECTS = many_vars.$(OBJEXT)
many_vars_OBJECTS = $(am_many_vars_OBJECTS)
many_vars_DEPENDENCIES = $(top_builddir)/src/libadios.a \
	$(am__DEPENDENCIES_1)
many_vars_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(many_vars_LDFLAGS) $(LDFLAGS) -o $@
am_path_test_OBJECTS = path_test.$(OBJEXT)
path_test_OBJECTS = $(am_path_test_OBJECTS)
path_test_DEPENDENCIES = $(top_builddir)/src/libadios.a \
	$(am__DEPENDENCIES_1)
path_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(path_test_LDFLAGS) $(LDFLAGS) -o $@
am_posix_method_OBJECTS = posix_method.$(OBJEXT)
posix_method_OBJECTS = $(am_posix_method_OBJECTS)
posix_method_DEPENDENCIES = $(top_builddir)/src/libadiosf.a \
	$(am__DEPENDENCIES_1)
posix_method_LINK = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) \
	$(posix_method_LDFLAGS) $(LDFLAGS) -o $@
am_reuse_dim_OBJECTS = reuse_dim.$(OBJEXT)
reuse_dim_OBJECTS = $(am_reuse_dim_OBJECTS)
reuse_dim_DEPENDENCIES = $(top_builddir)/src/libadios.a \
	$(am__DEPENDENCIES_1)
reuse_dim_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(reuse_dim_LDFLAGS) $(LDFLAGS) -o $@
am_selections_OBJECTS = selections.$(OBJEXT)
selections_OBJECTS = $(am_selections_OBJECTS)
selections_DEPENDENCIES = $(top_builddir)/src/libadios.a \
	$(am__DEPENDENCIES_1)
selections_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(selections_LDFLAGS) $(LDFLAGS) -o $@
am_set_path_OBJECTS = set_path.$(OBJEXT)
set_path_OBJECTS = $(am_set_path_OBJECTS)
set_path_DEPENDENCIES = $(top_builddir)/src/libadios.a \
	$(am__DEPENDENCIES_1)
set_path_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(set_path_LDFLAGS) $(LDFLAGS) -o $@
am_set_path_var_OBJECTS = set_path_var.$(OBJEXT)
set_path_var_OBJECTS = $(am_set_path_var_OBJECTS)
set_path_var_DEPENDENCIES = $(top_builddir)/src/libadios.a \
	$(am__DEPENDENCIES_1)
set_path_var_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(set_path_var_LDFLAGS) $(LDFLAGS) -o $@
am_steps_read_file_OBJECTS = steps_read_file.$(OBJEXT)
steps_read_file_OBJECTS = $(am_steps_read_file_OBJECTS)
steps_read_file_DEPENDENCIES = $(top_builddir)/src/libadiosread.a \
	$(am__DEPENDENCIES_1)
steps_read_file_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(steps_read_file_LDFLAGS) $(LDFLAGS) \
	-o $@
am_steps_read_stream_OBJECTS = steps_read_stream.$(OBJEXT)
steps_read_stream_OBJECTS = $(am_steps_read_stream_OBJECTS)
steps_read_stream_DEPENDENCIES = $(top_builddir)/src/libadiosread.a \
	$(am__DEPENDENCIES_1)
steps_read_stream_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(steps_read_stream_LDFLAGS) $(LDFLAGS) \
	-o $@
am_steps_write_OBJECTS = steps_write.$(OBJEXT)
steps_write_OBJECTS = $(am_steps_write_OBJECTS)
steps_write_DEPENDENCIES = $(top_builddir)/src/libadios.a \
	$(am__DEPENDENCIES_1)
steps_write_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(steps_write_LDFLAGS) $(LDFLAGS) -o $@
am_transforms_writeblock_read_OBJECTS =  \
	transforms_writeblock_read.$(OBJEXT)
transforms_writeblock_read_OBJECTS =  \
	$(am_transforms_writeblock_read_OBJECTS)
transforms_writeblock_read_DEPENDENCIES =  \
	$(top_builddir)/src/libadiosread.a $(am__DEPENDENCIES_1)
transforms_writeblock_read_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(transforms_writeblock_read_LDFLAGS) \
	$(LDFLAGS) -o $@
am_two_groups_OBJECTS = two_groups.$(OBJEXT)
two_groups_OBJECTS = $(am_two_groups_OBJECTS)
two_groups_DEPENDENCIES = $(top_builddir)/src/libadios.a \
	$(am__DEPENDENCIES_1)
two_groups_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(two_groups_LDFLAGS) $(LDFLAGS) -o $@
am_write_alternate_OBJECTS = write_alternate.$(OBJEXT)
write_alternate_OBJECTS = $(am_write_alternate_OBJECTS)
write_alternate_DEPENDENCIES = $(top_builddir)/src/libadios.a \
	$(am__DEPENDENCIES_1)
write_alternate_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(write_alternate_LDFLAGS) $(LDFLAGS) \
	-o $@
am_write_read_OBJECTS = write_read.$(OBJEXT)
write_read_OBJECTS = $(am_write_read_OBJECTS)
write_read_DEPENDENCIES = $(top_builddir)/src/libadios.a \
	$(am__DEPENDENCIES_1)
write_read_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(write_read_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
PPFCCOMPILE = $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS)
LTPPFCCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_FCFLAGS) $(FCFLAGS)
AM_V_PPFC = $(am__v_PPFC_@AM_V@)
am__v_PPFC_ = $(am__v_PPFC_@AM_DEFAULT_V@)
am__v_PPFC_0 = @echo "  PPFC    " $@;
am__v_PPFC_1 = 
FCLD = $(FC)
AM_V_FCLD = $(am__v_FCLD_@AM_V@)
am__v_FCLD_ = $(am__v_FCLD_@AM_DEFAULT_V@)
am__v_FCLD_0 = @echo "  FCLD    " $@;
am__v_FCLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(adios_amr_write_SOURCES) $(adios_amr_write_2vars_SOURCES) \
	$(adios_staged_read_SOURCES) \
	$(adios_staged_read_2vars_SOURCES) \
	$(adios_staged_read_v2_SOURCES) \
	$(adios_transforms_read_write_SOURCES) $(big_file_SOURCES) \
	$(blocks_SOURCES) $(build_standard_dataset_SOURCES) \
	$(connect_to_space_subset_SOURCES) $(local_array_time_SOURCES) \
	$(many_vars_SOURCES) $(path_test_SOURCES) \
	$(posix_method_SOURCES) $(reuse_dim_SOURCES) \
	$(selections_SOURCES) $(set_path_SOURCES) \
	$(set_path_var_SOURCES) $(steps_read_file_SOURCES) \
	$(steps_read_stream_SOURCES) $(steps_write_SOURCES) \
	$(transforms_writeblock_read_SOURCES) $(two_groups_SOURCES) \
	$(write_alternate_SOURCES) $(write_read_SOURCES)
DIST_SOURCES = $(adios_amr_write_SOURCES) \
	$(adios_amr_write_2vars_SOURCES) $(adios_staged_read_SOURCES) \
	$(adios_staged_read_2vars_SOURCES) \
	$(adios_staged_read_v2_SOURCES) \
	$(adios_transforms_read_write_SOURCES) $(big_file_SOURCES) \
	$(blocks_SOURCES) $(build_standard_dataset_SOURCES) \
	$(connect_to_space_subset_SOURCES) $(local_array_time_SOURCES) \
	$(many_vars_SOURCES) $(path_test_SOURCES) \
	$(posix_method_SOURCES) $(reuse_dim_SOURCES) \
	$(selections_SOURCES) $(set_path_SOURCES) \
	$(set_path_var_SOURCES) $(steps_read_file_SOURCES) \
	$(steps_read_stream_SOURCES) $(steps_write_SOURCES) \
	$(transforms_writeblock_read_SOURCES) $(two_groups_SOURCES) \
	$(write_alternate_SOURCES) $(write_read_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
DIST_SUBDIRS = examples
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/config/depcomp \
	$(top_srcdir)/config/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
ADIOSLIB_CFLAGS = @ADIOSLIB_CFLAGS@
ADIOSLIB_CPPFLAGS = @ADIOSLIB_CPPFLAGS@
ADIOSLIB_EXTRA_CPPFLAGS = @ADIOSLIB_EXTRA_CPPFLAGS@
ADIOSLIB_INT_CFLAGS = @ADIOSLIB_INT_CFLAGS@
ADIOSLIB_INT_CPPFLAGS = @ADIOSLIB_INT_CPPFLAGS@
ADIOSLIB_INT_LDADD = @ADIOSLIB_INT_LDADD@
ADIOSLIB_INT_LDFLAGS = @ADIOSLIB_INT_LDFLAGS@
ADIOSLIB_LDADD = @ADIOSLIB_LDADD@
ADIOSLIB_LDFLAGS = @ADIOSLIB_LDFLAGS@
ADIOSLIB_SEQ_CFLAGS = @ADIOSLIB_SEQ_CFLAGS@
ADIOSLIB_SEQ_CPPFLAGS = @ADIOSLIB_SEQ_CPPFLAGS@
ADIOSLIB_SEQ_LDADD = @ADIOSLIB_SEQ_LDADD@
ADIOSLIB_SEQ_LDFLAGS = @ADIOSLIB_SEQ_LDFLAGS@
ADIOSREADLIB_CFLAGS = @ADIOSREADLIB_CFLAGS@
ADIOSREADLIB_CPPFLAGS = @ADIOSREADLIB_CPPFLAGS@
ADIOSREADLIB_LDADD = @ADIOSREADLIB_LDADD@
ADIOSREADLIB_LDFLAGS = @ADIOSREADLIB_LDFLAGS@
ADIOSREADLIB_SEQ_CFLAGS = @ADIOSREADLIB_SEQ_CFLAGS@
ADIOSREADLIB_SEQ_CPPFLAGS = @ADIOSREADLIB_SEQ_CPPFLAGS@
ADIOSREADLIB_SEQ_LDADD = @ADIOSREADLIB_SEQ_LDADD@
ADIOSREADLIB_SEQ_LDFLAGS = @ADIOSREADLIB_SEQ_LDFLAGS@
ADIOS_TIMERS = @ADIOS_TIMERS@
ADIOS_TIMER_EVENTS = @ADIOS_TIMER_EVENTS@
ALACRITY_CPPFLAGS = @ALACRITY_CPPFLAGS@
ALACRITY_LDFLAGS = @ALACRITY_LDFLAGS@
ALACRITY_LIBS = @ALACRITY_LIBS@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
APLOD_CPPFLAGS = @APLOD_CPPFLAGS@
APLOD_LDFLAGS = @APLOD_LDFLAGS@
APLOD_LIBS = @APLOD_LIBS@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BP2H5_CC = @BP2H5_CC@
BP2NCD_CC = @BP2NCD_CC@
BZIP2_CPPFLAGS = @BZIP2_CPPFLAGS@
BZIP2_LDFLAGS = @BZIP2_LDFLAGS@
BZIP2_LIBS = @BZIP2_LIBS@
CC = $(MPICC)
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CRAY_PMI_CPPFLAGS = @CRAY_PMI_CPPFLAGS@
CRAY_PMI_LDFLAGS = @CRAY_PMI_LDFLAGS@
CRAY_PMI_LIBS = @CRAY_PMI_LIBS@
CRAY_UGNI_CPPFLAGS = @CRAY_UGNI_CPPFLAGS@
CRAY_UGNI_LDFLAGS = @CRAY_UGNI_LDFLAGS@
CRAY_UGNI_LIBS = @CRAY_UGNI_LIBS@
CSH = @CSH@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DATASPACES_CPPFLAGS = @DATASPACES_CPPFLAGS@
DATASPACES_LDFLAGS = @DATASPACES_LDFLAGS@
DATASPACES_LIBS = @DATASPACES_LIBS@
DCMF_CFLAGS = @DCMF_CFLAGS@
DCMF_CPPFLAGS = @DCMF_CPPFLAGS@
DCMF_LDFLAGS = @DCMF_LDFLAGS@
DCMF_LIBS = @DCMF_LIBS@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DIMES_CPPFLAGS = @DIMES_CPPFLAGS@
DIMES_LDFLAGS = @DIMES_LDFLAGS@
DIMES_LIBS = @DIMES_LIBS@
DLLTOOL = @DLLTOOL@
DMALLOC_CPPFLAGS = @DMALLOC_CPPFLAGS@
DMALLOC_LDFLAGS = @DMALLOC_LDFLAGS@
DMALLOC_LIBS = @DMALLOC_LIBS@
DSYMUTIL = @DSYMUTIL@
DT_CPPFLAGS = @DT_CPPFLAGS@
DT_LDFLAGS = @DT_LDFLAGS@
DT_LIBS = @DT_LIBS@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FASTBIT_CPPFLAGS = @FASTBIT_CPPFLAGS@
FASTBIT_LDFLAGS = @FASTBIT_LDFLAGS@
FASTBIT_LIBS = @FASTBIT_LIBS@
FC = $(MPIFC)
FCFLAGS = @FCFLAGS@
FCLIBS = @FCLIBS@
FGREP = @FGREP@
FGR_CPPFLAGS = @FGR_CPPFLAGS@
FGR_LDFLAGS = @FGR_LDFLAGS@
FGR_LIBS = @FGR_LIBS@
FP_CPPFLAGS = @FP_CPPFLAGS@
FP_LDFLAGS = @FP_LDFLAGS@
FP_LIBS = @FP_LIBS@
GLIB_CPPFLAGS = @GLIB_CPPFLAGS@
GLIB_LDFLAGS = @GLIB_LDFLAGS@
GLIB_LIBS = @GLIB_LIBS@
GREP = @GREP@
HDF5_CPPFLAGS = @HDF5_CPPFLAGS@
HDF5_LDFLAGS = @HDF5_LDFLAGS@
HDF5_LIBS = @HDF5_LIBS@
INFINIBAND_CFLAGS = @INFINIBAND_CFLAGS@
INFINIBAND_CPPFLAGS = @INFINIBAND_CPPFLAGS@
INFINIBAND_LDFLAGS = @INFINIBAND_LDFLAGS@
INFINIBAND_LIBS = @INFINIBAND_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
ISOBAR_CPPFLAGS = @ISOBAR_CPPFLAGS@
ISOBAR_LDFLAGS = @ISOBAR_LDFLAGS@
ISOBAR_LIBS = @ISOBAR_LIBS@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
LUSTRE_CPPFLAGS = @LUSTRE_CPPFLAGS@
LUSTRE_LDFLAGS = @LUSTRE_LDFLAGS@
LUSTRE_LIBS = @LUSTRE_LIBS@
MACRODEFFLAG = @MACRODEFFLAG@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
MPICC = @MPICC@
MPICXX = @MPICXX@
MPIFC = @MPIFC@
MPILIBS = @MPILIBS@
MXML_CPPFLAGS = @MXML_CPPFLAGS@
MXML_LDFLAGS = @MXML_LDFLAGS@
MXML_LIBS = @MXML_LIBS@
NC4PAR_CPPFLAGS = @NC4PAR_CPPFLAGS@
NC4PAR_LDFLAGS = @NC4PAR_LDFLAGS@
NC4PAR_LIBS = @NC4PAR_LIBS@
NETCDF_CPPFLAGS = @NETCDF_CPPFLAGS@
NETCDF_LDFLAGS = @NETCDF_LDFLAGS@
NETCDF_LIBS = @NETCDF_LIBS@
NM = @NM@
NMEDIT = @NMEDIT@
NSSI_BUILDDIR = @NSSI_BUILDDIR@
NSSI_CFLAGS = @NSSI_CFLAGS@
NSSI_CPPFLAGS = @NSSI_CPPFLAGS@
NSSI_LDFLAGS = @NSSI_LDFLAGS@
NSSI_LIBS = @NSSI_LIBS@
NSSI_SERVER_LIBS = @NSSI_SERVER_LIBS@
NSSI_SRCDIR = @NSSI_SRCDIR@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PABLO_CPPFLAGS = @PABLO_CPPFLAGS@
PABLO_LDFLAGS = @PABLO_LDFLAGS@
PABLO_LIBS = @PABLO_LIBS@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PAMI_CFLAGS = @PAMI_CFLAGS@
PAMI_CPPFLAGS = @PAMI_CPPFLAGS@
PAMI_LDFLAGS = @PAMI_LDFLAGS@
PAMI_LIBS = @PAMI_LIBS@
PATHPROG = @PATHPROG@
PATH_SEPARATOR = @PATH_SEPARATOR@
PHDF5_CPPFLAGS = @PHDF5_CPPFLAGS@
PHDF5_LDFLAGS = @PHDF5_LDFLAGS@
PHDF5_LIBS = @PHDF5_LIBS@
PORTALS_CFLAGS = @PORTALS_CFLAGS@
PORTALS_CPPFLAGS = @PORTALS_CPPFLAGS@
PORTALS_HEADER = @PORTALS_HEADER@
PORTALS_LDFLAGS = @PORTALS_LDFLAGS@
PORTALS_LIBS = @PORTALS_LIBS@
PORTALS_NAL_HEADER = @PORTALS_NAL_HEADER@
PORTALS_RT_HEADER = @PORTALS_RT_HEADER@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
RANLIB = @RANLIB@
RIDCOMPRESS_CPPFLAGS = @RIDCOMPRESS_CPPFLAGS@
RIDCOMPRESS_LDFLAGS = @RIDCOMPRESS_LDFLAGS@
RIDCOMPRESS_LIBS = @RIDCOMPRESS_LIBS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SIRIUS_CPPFLAGS = @SIRIUS_CPPFLAGS@
SIRIUS_LDFLAGS = @SIRIUS_LDFLAGS@
SIRIUS_LIBS = @SIRIUS_LIBS@
SKEL_HAVE_ADIOS_TIMING = @SKEL_HAVE_ADIOS_TIMING@
STRIP = @STRIP@
SZIP_CPPFLAGS = @SZIP_CPPFLAGS@
SZIP_LDFLAGS = @SZIP_LDFLAGS@
SZIP_LIBS = @SZIP_LIBS@
TIMER_CPPFLAGS = @TIMER_CPPFLAGS@
TIMER_LDFLAGS = @TIMER_LDFLAGS@
TIMER_LIBS = @TIMER_LIBS@
VERSION = @VERSION@
VERSION_MAJOR = @VERSION_MAJOR@
VERSION_MICRO = @VERSION_MICRO@
VERSION_MINOR = @VERSION_MINOR@
ZFP_CPPFLAGS = @ZFP_CPPFLAGS@
ZFP_LDFLAGS = @ZFP_LDFLAGS@
ZFP_LIBS = @ZFP_LIBS@
ZLIB_CPPFLAGS = @ZLIB_CPPFLAGS@
ZLIB_LDFLAGS = @ZLIB_LDFLAGS@
ZLIB_LIBS = @ZLIB_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_FC = @ac_ct_FC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# Add your parallel codes that you want to build at 'make check'
# Do not build Fortran codes if Fortran is not supported.
# Do not build a code using the write API if only the read API is available
# Sequential tests of src/ should go into tests/test_src
# Steps:
# 1. add code name below to check_readonly_C/check_C/check_readonly_Fortran/check_Fortran targets
# 2. add code name to TESTS if it is a sequential test 
# 3. define build rules for your code
# 4. add files to CLEANFILES that should be deleted at 'make clean'
# 5. add to EXTRA_DIST any non-source files that should go with the distribution
check_readonly_C = 
@BUILD_WRITE_TRUE@check_C = local_array_time \
@BUILD_WRITE_TRUE@        adios_amr_write \
@BUILD_WRITE_TRUE@        adios_amr_write_2vars \
@BUILD_WRITE_TRUE@        adios_staged_read \
@BUILD_WRITE_TRUE@        adios_staged_read_v2 \
@BUILD_WRITE_TRUE@        adios_staged_read_2vars \
@BUILD_WRITE_TRUE@        write_read \
@BUILD_WRITE_TRUE@        write_alternate \
@BUILD_WRITE_TRUE@        two_groups \
@BUILD_WRITE_TRUE@        many_vars \
@BUILD_WRITE_TRUE@        selections \
@BUILD_WRITE_TRUE@        path_test \
@BUILD_WRITE_TRUE@        reuse_dim \
@BUILD_WRITE_TRUE@        adios_transforms_read_write \
@BUILD_WRITE_TRUE@        connect_to_space_subset \
@BUILD_WRITE_TRUE@	big_file \
@BUILD_WRITE_TRUE@	set_path \
@BUILD_WRITE_TRUE@	set_path_var \
@BUILD_WRITE_TRUE@	steps_write \
@BUILD_WRITE_TRUE@	steps_read_file \
@BUILD_WRITE_TRUE@	steps_read_stream \
@BUILD_WRITE_TRUE@	blocks \
@BUILD_WRITE_TRUE@	build_standard_dataset \
@BUILD_WRITE_TRUE@	transforms_writeblock_read

@BUILD_WRITE_TRUE@test_C = 
@BUILD_WRITE_TRUE@SUBDIRS = examples
@BUILD_FORTRAN_TRUE@check_readonly_Fortran = 
@BUILD_FORTRAN_TRUE@test_F = 
@BUILD_FORTRAN_TRUE@@BUILD_WRITE_TRUE@check_Fortran = posix_method
AM_CPPFLAGS = $(all_includes) -I$(top_builddir)/src/public \
	-I$(top_builddir)/src -I$(top_srcdir)/src/public

#############################
# Build rules for each test #
#############################

# posix_method
posix_method_SOURCES = posix_method.F90
posix_method_LDADD = $(top_builddir)/src/libadiosf.a $(ADIOSLIB_LDADD)
posix_method_LDFLAGS = $(AM_LDFLAGS) $(ADIOSLIB_LDFLAGS)
local_array_time_SOURCES = local_array_time.c
local_array_time_LDADD = $(top_builddir)/src/libadios.a $(ADIOSLIB_LDADD)
local_array_time_LDFLAGS = $(AM_LDFLAGS) $(ADIOSLIB_LDFLAGS)
adios_amr_write_SOURCES = adios_amr_write.c
adios_amr_write_LDADD = $(top_builddir)/src/libadios.a $(ADIOSLIB_LDADD)
adios_amr_write_LDFLAGS = $(AM_LDFLAGS) $(ADIOSLIB_LDFLAGS)
adios_amr_write_2vars_SOURCES = adios_amr_write_2vars.c
adios_amr_write_2vars_LDADD = $(top_builddir)/src/libadios.a $(ADIOSLIB_LDADD)
adios_amr_write_2vars_LDFLAGS = $(AM_LDFLAGS) $(ADIOSLIB_LDFLAGS)
adios_staged_read_SOURCES = adios_staged_read.c
adios_staged_read_LDADD = $(top_builddir)/src/libadiosread.a $(ADIOSREADLIB_LDADD)
adios_staged_read_LDFLAGS = $(AM_LDFLAGS) $(ADIOSREADLIB_LDFLAGS)
adios_staged_read_v2_SOURCES = adios_staged_read_v2.c
adios_staged_read_v2_LDADD = $(top_builddir)/src/libadiosread.a $(ADIOSREADLIB_LDADD)
adios_staged_read_v2_LDFLAGS = $(AM_LDFLAGS) $(ADIOSREADLIB_LDFLAGS)
adios_staged_read_2vars_SOURCES = adios_staged_read_2vars.c
adios_staged_read_2vars_LDADD = $(top_builddir)/src/libadiosread.a $(ADIOSREADLIB_LDADD)
adios_staged_read_2vars_LDFLAGS = $(AM_LDFLAGS) $(ADIOSREADLIB_LDFLAGS)
adios_transforms_read_write_SOURCES = adios_transforms_read_write.c
adios_transforms_read_write_LDADD = $(top_builddir)/src/libadios.a $(ADIOSLIB_LDADD)
adios_transforms_read_write_LDFLAGS = $(AM_LDFLAGS) $(ADIOSLIB_LDFLAGS)
write_read_SOURCES = write_read.c
write_read_LDADD = $(top_builddir)/src/libadios.a $(ADIOSLIB_LDADD)
write_read_LDFLAGS = $(AM_LDFLAGS) $(ADIOSLIB_LDFLAGS)
write_alternate_SOURCES = write_alternate.c
write_alternate_LDADD = $(top_builddir)/src/libadios.a $(ADIOSLIB_LDADD)
write_alternate_LDFLAGS = $(AM_LDFLAGS) $(ADIOSLIB_LDFLAGS)
set_path_SOURCES = set_path.c
set_path_LDADD = $(top_builddir)/src/libadios.a $(ADIOSLIB_LDADD)
set_path_LDFLAGS = $(AM_LDFLAGS) $(ADIOSLIB_LDFLAGS)
set_path_var_SOURCES = set_path_var.c
set_path_var_LDADD = $(top_builddir)/src/libadios.a $(ADIOSLIB_LDADD)
set_path_var_LDFLAGS = $(AM_LDFLAGS) $(ADIOSLIB_LDFLAGS)
two_groups_SOURCES = two_groups.c
two_groups_LDADD = $(top_builddir)/src/libadios.a $(ADIOSLIB_LDADD)
two_groups_LDFLAGS = $(AM_LDFLAGS) $(ADIOSLIB_LDFLAGS)
many_vars_SOURCES = many_vars.c
many_vars_LDADD = $(top_builddir)/src/libadios.a $(ADIOSLIB_LDADD)
many_vars_LDFLAGS = $(AM_LDFLAGS) $(ADIOSLIB_LDFLAGS)
selections_SOURCES = selections.c
selections_LDADD = $(top_builddir)/src/libadios.a $(ADIOSLIB_LDADD)
selections_LDFLAGS = $(AM_LDFLAGS) $(ADIOSLIB_LDFLAGS)
path_test_SOURCES = path_test.c
path_test_LDADD = $(top_builddir)/src/libadios.a $(ADIOSLIB_LDADD)
path_test_LDFLAGS = $(AM_LDFLAGS) $(ADIOSLIB_LDFLAGS)
reuse_dim_SOURCES = reuse_dim.c
reuse_dim_LDADD = $(top_builddir)/src/libadios.a $(ADIOSLIB_LDADD)
reuse_dim_LDFLAGS = $(AM_LDFLAGS) $(ADIOSLIB_LDFLAGS)
connect_to_space_subset_SOURCES = connect_to_space_subset.c
connect_to_space_subset_LDADD = $(top_builddir)/src/libadios.a $(ADIOSLIB_LDADD)
connect_to_space_subset_LDFLAGS = $(AM_LDFLAGS) $(ADIOSLIB_LDFLAGS)
big_file_SOURCES = big_file.c
big_file_LDADD = $(top_builddir)/src/libadios.a $(ADIOSLIB_LDADD)
big_file_LDFLAGS = $(AM_LDFLAGS) $(ADIOSLIB_LDFLAGS)
steps_write_SOURCES = steps_write.c
steps_write_LDADD = $(top_builddir)/src/libadios.a $(ADIOSLIB_LDADD)
steps_write_LDFLAGS = $(AM_LDFLAGS) $(ADIOSLIB_LDFLAGS)
steps_read_file_SOURCES = steps_read_file.c
steps_read_file_LDADD = $(top_builddir)/src/libadiosread.a $(ADIOSREADLIB_LDADD)
steps_read_file_LDFLAGS = $(AM_LDFLAGS) $(ADIOSREADLIB_LDFLAGS)
steps_read_stream_SOURCES = steps_read_stream.c
steps_read_stream_LDADD = $(top_builddir)/src/libadiosread.a $(ADIOSREADLIB_LDADD)
steps_read_stream_LDFLAGS = $(AM_LDFLAGS) $(ADIOSREADLIB_LDFLAGS)
blocks_SOURCES = blocks.c
blocks_LDADD = $(top_builddir)/src/libadios.a $(ADIOSLIB_LDADD)
blocks_LDFLAGS = $(AM_LDFLAGS) $(ADIOSLIB_LDFLAGS)
build_standard_dataset_SOURCES = build_standard_dataset.c 
build_standard_dataset_LDADD = $(top_builddir)/src/libadios.a $(ADIOSLIB_LDADD) 
build_standard_dataset_LDFLAGS = $(AM_LDFLAGS) $(ADIOSLIB_LDFLAGS)
transforms_writeblock_read_SOURCES = transforms_writeblock_read.c 
transforms_writeblock_read_LDADD = $(top_builddir)/src/libadiosread.a $(ADIOSREADLIB_LDADD) 
transforms_writeblock_read_LDFLAGS = $(AM_LDFLAGS) $(ADIOSREADLIB_LDFLAGS)

#transforms_SOURCES=transforms.c
#transforms_CPPFLAGS = -DADIOS_USE_READ_API_1
#transforms_LDADD = $(top_builddir)/src/libadios.a $(ADIOSLIB_LDADD)
#transforms_LDFLAGS = $(AM_LDFLAGS) $(ADIOSLIB_LDFLAGS)
#transforms.o: transforms.c
EXTRA_DIST = adios_amr_write.xml adios_amr_write_2vars.xml \
             posix_method.xml local_array_time.xml  \
             write_alternate.xml write_read.xml transforms.xml \
             path_test.xml adios_transforms.xml \
	     two_groups.xml set_path.xml set_path_var.xml

CLEANFILES = gwrite_posix_method.fh gread_posix_method.fh 
FCLINK = \
	$(LIBTOOL) --mode=link --tag F77 $(FC) \
	$(AM_FCFLAGS) $(FCFLAGS) $(LDFLAGS) -o $@

all: all-recursive

.SUFFIXES:
.SUFFIXES: .F90 .c .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/suite/programs/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests/suite/programs/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

adios_amr_write$(EXEEXT): $(adios_amr_write_OBJECTS) $(adios_amr_write_DEPENDENCIES) $(EXTRA_adios_amr_write_DEPENDENCIES) 
	@rm -f adios_amr_write$(EXEEXT)
	$(AM_V_CCLD)$(adios_amr_write_LINK) $(adios_amr_write_OBJECTS) $(adios_amr_write_LDADD) $(LIBS)

adios_amr_write_2vars$(EXEEXT): $(adios_amr_write_2vars_OBJECTS) $(adios_amr_write_2vars_DEPENDENCIES) $(EXTRA_adios_amr_write_2vars_DEPENDENCIES) 
	@rm -f adios_amr_write_2vars$(EXEEXT)
	$(AM_V_CCLD)$(adios_amr_write_2vars_LINK) $(adios_amr_write_2vars_OBJECTS) $(adios_amr_write_2vars_LDADD) $(LIBS)

adios_staged_read$(EXEEXT): $(adios_staged_read_OBJECTS) $(adios_staged_read_DEPENDENCIES) $(EXTRA_adios_staged_read_DEPENDENCIES) 
	@rm -f adios_staged_read$(EXEEXT)
	$(AM_V_CCLD)$(adios_staged_read_LINK) $(adios_staged_read_OBJECTS) $(adios_staged_read_LDADD) $(LIBS)

adios_staged_read_2vars$(EXEEXT): $(adios_staged_read_2vars_OBJECTS) $(adios_staged_read_2vars_DEPENDENCIES) $(EXTRA_adios_staged_read_2vars_DEPENDENCIES) 
	@rm -f adios_staged_read_2vars$(EXEEXT)
	$(AM_V_CCLD)$(adios_staged_read_2vars_LINK) $(adios_staged_read_2vars_OBJECTS) $(adios_staged_read_2vars_LDADD) $(LIBS)

adios_staged_read_v2$(EXEEXT): $(adios_staged_read_v2_OBJECTS) $(adios_staged_read_v2_DEPENDENCIES) $(EXTRA_adios_staged_read_v2_DEPENDENCIES) 
	@rm -f adios_staged_read_v2$(EXEEXT)
	$(AM_V_CCLD)$(adios_staged_read_v2_LINK) $(adios_staged_read_v2_OBJECTS) $(adios_staged_read_v2_LDADD) $(LIBS)

adios_transforms_read_write$(EXEEXT): $(adios_transforms_read_write_OBJECTS) $(adios_transforms_read_write_DEPENDENCIES) $(EXTRA_adios_transforms_read_write_DEPENDENCIES) 
	@rm -f adios_transforms_read_write$(EXEEXT)
	$(AM_V_CCLD)$(adios_transforms_read_write_LINK) $(adios_transforms_read_write_OBJECTS) $(adios_transforms_read_write_LDADD) $(LIBS)

big_file$(EXEEXT): $(big_file_OBJECTS) $(big_file_DEPENDENCIES) $(EXTRA_big_file_DEPENDENCIES) 
	@rm -f big_file$(EXEEXT)
	$(AM_V_CCLD)$(big_file_LINK) $(big_file_OBJECTS) $(big_file_LDADD) $(LIBS)

blocks$(EXEEXT): $(blocks_OBJECTS) $(blocks_DEPENDENCIES) $(EXTRA_blocks_DEPENDENCIES) 
	@rm -f blocks$(EXEEXT)
	$(AM_V_CCLD)$(blocks_LINK) $(blocks_OBJECTS) $(blocks_LDADD) $(LIBS)

build_standard_dataset$(EXEEXT): $(build_standard_dataset_OBJECTS) $(build_standard_dataset_DEPENDENCIES) $(EXTRA_build_standard_dataset_DEPENDENCIES) 
	@rm -f build_standard_dataset$(EXEEXT)
	$(AM_V_CCLD)$(build_standard_dataset_LINK) $(build_standard_dataset_OBJECTS) $(build_standard_dataset_LDADD) $(LIBS)

connect_to_space_subset$(EXEEXT): $(connect_to_space_subset_OBJECTS) $(connect_to_space_subset_DEPENDENCIES) $(EXTRA_connect_to_space_subset_DEPENDENCIES) 
	@rm -f connect_to_space_subset$(EXEEXT)
	$(AM_V_CCLD)$(connect_to_space_subset_LINK) $(connect_to_space_subset_OBJECTS) $(connect_to_space_subset_LDADD) $(LIBS)

local_array_time$(EXEEXT): $(local_array_time_OBJECTS) $(local_array_time_DEPENDENCIES) $(EXTRA_local_array_time_DEPENDENCIES) 
	@rm -f local_array_time$(EXEEXT)
	$(AM_V_CCLD)$(local_array_time_LINK) $(local_array_time_OBJECTS) $(local_array_time_LDADD) $(LIBS)

many_vars$(EXEEXT): $(many_vars_OBJECTS) $(many_vars_DEPENDENCIES) $(EXTRA_many_vars_DEPENDENCIES) 
	@rm -f many_vars$(EXEEXT)
	$(AM_V_CCLD)$(many_vars_LINK) $(many_vars_OBJECTS) $(many_vars_LDADD) $(LIBS)

path_test$(EXEEXT): $(path_test_OBJECTS) $(path_test_DEPENDENCIES) $(EXTRA_path_test_DEPENDENCIES) 
	@rm -f path_test$(EXEEXT)
	$(AM_V_CCLD)$(path_test_LINK) $(path_test_OBJECTS) $(path_test_LDADD) $(LIBS)

posix_method$(EXEEXT): $(posix_method_OBJECTS) $(posix_method_DEPENDENCIES) $(EXTRA_posix_method_DEPENDENCIES) 
	@rm -f posix_method$(EXEEXT)
	$(AM_V_FCLD)$(posix_method_LINK) $(posix_method_OBJECTS) $(posix_method_LDADD) $(LIBS)

reuse_dim$(EXEEXT): $(reuse_dim_OBJECTS) $(reuse_dim_DEPENDENCIES) $(EXTRA_reuse_dim_DEPENDENCIES) 
	@rm -f reuse_dim$(EXEEXT)
	$(AM_V_CCLD)$(reuse_dim_LINK) $(reuse_dim_OBJECTS) $(reuse_dim_LDADD) $(LIBS)

selections$(EXEEXT): $(selections_OBJECTS) $(selections_DEPENDENCIES) $(EXTRA_selections_DEPENDENCIES) 
	@rm -f selections$(EXEEXT)
	$(AM_V_CCLD)$(selections_LINK) $(selections_OBJECTS) $(selections_LDADD) $(LIBS)

set_path$(EXEEXT): $(set_path_OBJECTS) $(set_path_DEPENDENCIES) $(EXTRA_set_path_DEPENDENCIES) 
	@rm -f set_path$(EXEEXT)
	$(AM_V_CCLD)$(set_path_LINK) $(set_path_OBJECTS) $(set_path_LDADD) $(LIBS)

set_path_var$(EXEEXT): $(set_path_var_OBJECTS) $(set_path_var_DEPENDENCIES) $(EXTRA_set_path_var_DEPENDENCIES) 
	@rm -f set_path_var$(EXEEXT)
	$(AM_V_CCLD)$(set_path_var_LINK) $(set_path_var_OBJECTS) $(set_path_var_LDADD) $(LIBS)

steps_read_file$(EXEEXT): $(steps_read_file_OBJECTS) $(steps_read_file_DEPENDENCIES) $(EXTRA_steps_read_file_DEPENDENCIES) 
	@rm -f steps_read_file$(EXEEXT)
	$(AM_V_CCLD)$(steps_read_file_LINK) $(steps_read_file_OBJECTS) $(steps_read_file_LDADD) $(LIBS)

steps_read_stream$(EXEEXT): $(steps_read_stream_OBJECTS) $(steps_read_stream_DEPENDENCIES) $(EXTRA_steps_read_stream_DEPENDENCIES) 
	@rm -f steps_read_stream$(EXEEXT)
	$(AM_V_CCLD)$(steps_read_stream_LINK) $(steps_read_stream_OBJECTS) $(steps_read_stream_LDADD) $(LIBS)

steps_write$(EXEEXT): $(steps_write_OBJECTS) $(steps_write_DEPENDENCIES) $(EXTRA_steps_write_DEPENDENCIES) 
	@rm -f steps_write$(EXEEXT)
	$(AM_V_CCLD)$(steps_write_LINK) $(steps_write_OBJECTS) $(steps_write_LDADD) $(LIBS)

transforms_writeblock_read$(EXEEXT): $(transforms_writeblock_read_OBJECTS) $(transforms_writeblock_read_DEPENDENCIES) $(EXTRA_transforms_writeblock_read_DEPENDENCIES) 
	@rm -f transforms_writeblock_read$(EXEEXT)
	$(AM_V_CCLD)$(transforms_writeblock_read_LINK) $(transforms_writeblock_read_OBJECTS) $(transforms_writeblock_read_LDADD) $(LIBS)

two_groups$(EXEEXT): $(two_groups_OBJECTS) $(two_groups_DEPENDENCIES) $(EXTRA_two_groups_DEPENDENCIES) 
	@rm -f two_groups$(EXEEXT)
	$(AM_V_CCLD)$(two_groups_LINK) $(two_groups_OBJECTS) $(two_groups_LDADD) $(LIBS)

write_alternate$(EXEEXT): $(write_alternate_OBJECTS) $(write_alternate_DEPENDENCIES) $(EXTRA_write_alternate_DEPENDENCIES) 
	@rm -f write_alternate$(EXEEXT)
	$(AM_V_CCLD)$(write_alternate_LINK) $(write_alternate_OBJECTS) $(write_alternate_LDADD) $(LIBS)

write_read$(EXEEXT): $(write_read_OBJECTS) $(write_read_DEPENDENCIES) $(EXTRA_write_read_DEPENDENCIES) 
	@rm -f write_read$(EXEEXT)
	$(AM_V_CCLD)$(write_read_LINK) $(write_read_OBJECTS) $(write_read_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/adios_amr_write.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/adios_amr_write_2vars.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/adios_staged_read.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/adios_staged_read_2vars.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/adios_staged_read_v2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/adios_transforms_read_write.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/big_file.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blocks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/build_standard_dataset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connect_to_space_subset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/local_array_time.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/many_vars.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/path_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reuse_dim.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/selections.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/set_path.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/set_path_var.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/steps_read_file.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/steps_read_stream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/steps_write.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/transforms_writeblock_read.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/two_groups.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/write_alternate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/write_read.Po@am__quote@

.F90.o:
	$(AM_V_PPFC)$(PPFCCOMPILE) -c -o $@ $<

.F90.obj:
	$(AM_V_PPFC)$(PPFCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.F90.lo:
	$(AM_V_PPFC)$(LTPPFCCOMPILE) -c -o $@ $<

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile all-local
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am all-local \
	check check-TESTS check-am clean clean-checkPROGRAMS \
	clean-generic clean-libtool cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


all-local:
	test "$(srcdir)" = "$(builddir)" || cp -p $(srcdir)/*.xml $(builddir)
posix_method.o: gwrite_posix_method.fh 
gwrite_posix_method.fh: posix_method.xml
	$(top_builddir)/utils/gpp/gpp.py $(srcdir)/posix_method.xml
adios_amr_write.o: adios_amr_write.c
adios_amr_write_2vars.o: adios_amr_write_2vars.c
adios_staged_read.o: adios_staged_read.c
adios_staged_read_v2.o: adios_staged_read_v2.c
adios_staged_read_2vars.o: adios_staged_read_2vars.c
adios_transforms_read_write.o: adios_transforms_read_write.c 
write_read.o: write_read.c
write_alternate.o: write_alternate.c
set_path.o: set_path.c
set_path_var.o: set_path_var.c
two_groups.o: two_groups.c
many_vars.o: many_vars.c
selections.o: selections.c
path_test.o: path_test.c
reuse_dim.o: reuse_dim.c
connect_to_space_subset.o: connect_to_space_subset.c
big_file.o: big_file.c
steps_write.o: steps_write.c
steps_read_file.o: steps_read_file.c
steps_read_stream.o: steps_read_stream.c
blocks.o: blocks.c

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
