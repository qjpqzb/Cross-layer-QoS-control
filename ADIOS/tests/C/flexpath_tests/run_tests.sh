#!/bin/bash
# The protocol file generated by protogen.py ver. 1.0 on 2013-09-04 10:29
# AUTHOR: Magda S aka Magic Magg magg dot gatech at gmail dot com
# DATE: 2013-09-04
# PURPOSE: 
# REQUIREMENTS:
VERSION="1.0"

# bad arguments
readonly E_BADARGS=65


if [ $# -eq 0 ]; then
	echo "Usage: $(basename $0) mode"
	echo
 	echo "DESCRIPTION"
 	echo "The script allows to run tests for mpi and flexpath transports"
 	echo
 	echo "mode:"
	echo "  -c - clean remnants after running tests such as test.bp, .txt files"
	echo "  -flx-r - run flexpath readers"
	echo "  -flx-w - run flexpath writers"
	echo "  -mpi-r - run mpi readers"
	echo "  -mpi-w - run mpi writers"
	echo
	echo "EXAMPLES"
	echo "$(basename $0) -flx-r"
	echo "$(basename $0) -flx-w"
	echo "$(basename $0) -mpi-r"
	echo "$(basename $0) -mpi-w"
	echo "$(basename $0) -c"
	
	exit $E_BADARGS
fi

# mpi tests are all tests that work are maya_tests and flx_tests
# however maya_tests are run as one reader and one writer
# TODO check if this is required and just you can run as multiple readers
# and writers
maya_tests="maya_append maya_noxml"

# flx_tests are all tests that should work with flexpath
flx_tests="1D_arr_global 1D_arr_global_noxml scalar"

all_tests="1D_arr_global 1D_arr_global_noxml scalar maya_append maya_noxml"

# runs flex readers or writers; uses global var flx_tests
# @param $1 determines if this is a reader (r) or writer (w)
function run_flx {
	my_exec="./writer"
	if [ $1 == "r" ]; then
		my_exec="./reader"
	fi
	for t in $flx_tests; do
		pushd $t > /dev/null
		mpirun -np 2 $my_exec -t flx
		popd > /dev/null
	done
}

# runs mpi readers; uses global var flx_tests
# @param $1 determines if this is a reader (r) or writer (w)
function run_mpi {
	my_exec="./writer"
	if [ $1 == "r" ]; then
		my_exec="./reader"
	fi
	for t in $flx_tests; do
		pushd $t > /dev/null
		mpirun -np 2 $my_exec -t mpi
		popd > /dev/null
	done
	for t in $maya_tests; do
		pushd $t > /dev/null
		mpirun -np 1 $my_exec -t mpi
		popd > /dev/null
	done
}

# determine what the user wants to do
case $1 in
	"-c")
	for t in $all_tests; do
		pushd $t > /dev/null
		rm 	-rf *_writer_info.txt *_reader_info.txt test.bp *_reader_ready.txt *_writer_ready.txt
		popd > /dev/null
	done
	;;
	"-flx-r")
	run_flx "r"	
	;;
	"-flx-w")
	run_flx "w"
	;;
	"-mpi-r")
	run_mpi "r"
	;;
	"-mpi-w")
	run_mpi "w"
	;;
	*)
	echo "ERROR: unknown option"
	;;
esac

exit 0

# eof