#!/bin/bash
#PBS -A STF006
#PBS -N staging
#PBS -j oe
#PBS -l walltime=0:10:00,nodes=3

#cd $PBS_O_WORKDIR

if [ `hostname | cut -c 1-4` == "sith" -o `hostname | cut -c 1-4` == "rhea" ]; then
    ## Rhea/Sith cluster
    source /etc/profile.d/modules.sh
    module load adios/1.7.0
    module load dataspaces/1.4.0

    RUNCMD="mpirun -np"
    SERVER=$DATASPACES_DIR/bin/dataspaces_server

elif [ `hostname | cut -c 1-7` == "chester" ]; then
    ## Chester
    source /opt/modules/default/etc/modules.sh
    module load adios/1.7.0
    module load dataspaces/1.4.0

    RUNCMD="aprun -n"
    SERVER=$DATASPACES_DIR/bin/dataspaces_server

else
    echo "Could not determine what machine is this."
    return
fi

# Number of writers (WPX*WPY = WRITEPROC)
WRITEPROC=12
WPX=4
WPY=3
# Number of staging processes, if staging is used
# DIMES needs only 1 (more is useless)
# DATASPACES may need many to store multiple steps of data in memory
STAGINGPROC=2
# Number of readers (RPX*RPY = READPROC)
READPROC=3
RPX=3
RPY=1


let "WP=WPX*WPY"
if [ $WP -ne $WRITEPROC ]; then
    echo "WPX*WPY != WRITEPROC: " $WP and $WRITEPROC
    exit 1
fi

let "RP=RPX*RPY"
if [ $RP -ne $READPROC ]; then
    echo "RPX*RPY != READPROC: " $RP and $READPROC
    exit 1
fi


# clean-up
rm -f log.* draw* core* conf dataspaces.conf srv.lck
rm -f writer.bp staged.bp

METHOD=`grep "<transport .*method=" writer.xml | sed -e "s/^.*method=\"\([A-Z]*\).*/\1/"`
echo "The selected method in writer.xml is: $METHOD"

if [ "x$METHOD" == "xDATASPACES" -o "x$METHOD" == "xDIMES" ]; then
    READMETHOD="$METHOD"
    let "PROCALL=WRITEPROC+READPROC"

    # Prepare config file for DataSpaces
    # dimension ordering is Fortran ordering (first is the fastest dimension)
    echo "## Config file for DataSpaces
ndim = 2
dims = 1000,1000
max_versions = 10
" > dataspaces.conf

    # Run DataSpaces
    echo "-- Start DataSpaces server "$SERVER" on $STAGINGPROC PEs, -s$STAGINGPROC -c$PROCALL"
    $RUNCMD $STAGINGPROC $SERVER -s$STAGINGPROC -c$PROCALL &> log.server &

    ## Give some time for the servers to load and startup
    sleep 1s
    while [ ! -f conf ]; do
        echo "-- File conf is not yet available from server. Sleep more"
        sleep 1s
    done
    sleep 10s  # wait server to fill up the conf file

    ## Export the main server config to the environment
    while read line; do
        export set "${line}"
    done < conf

    echo "-- DataSpaces Portals IDs: P2TNID = $P2TNID   P2TPID = $P2TPID"
else
    READMETHOD="BP"
fi

# Start WRITER
echo "-- Start WRITER on $WRITEPROC PEs"
$RUNCMD $WRITEPROC ./writer $WPX $WPY 65 129 5  >& log.writer &


# Start READER
echo "-- Start READER on $READPROC PEs."
$RUNCMD $READPROC ./stage_write writer.bp staged.bp $READMETHOD "" MPI "" $READPROC 1 1 >& log.stage_write &

echo "-- Wait until all applications exit. Run ./check.sh to see status"
wait
rm -f conf

